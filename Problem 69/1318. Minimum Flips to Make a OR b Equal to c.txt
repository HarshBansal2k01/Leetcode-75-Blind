Link to Youtube Video :- https://www.youtube.com/watch?v=0zMcfJ8ivx0
Link to Leetcode problem :- https://leetcode.com/problems/minimum-flips-to-make-a-or-b-equal-to-c/description/?envType=study-plan-v2&envId=leetcode-75

Time Complexity :- O(Log(max(a,b,c)))
Space Complexity :- O(1)


##############-PYTHON-####################

class Solution:
    def minFlips(self, a: int, b: int, c: int) -> int:
        result = 0

        while a != 0 or b != 0 or c != 0:
            if (c & 1) == 1:
                if (a & 1) == 0 and (b & 1) == 0:
                    result += 1
            else:
                result += (a & 1) + (b & 1)

            a >>= 1
            b >>= 1
            c >>= 1

        return result

        
 
##############-C++-####################

class Solution {
public:
    int minFlips(int a, int b, int c) {
        int result = 0;

        while (a != 0 || b != 0 || c != 0) {
            if ((c & 1) == 1) {
                if ((a & 1) == 0 && (b & 1) == 0) {
                    result++;
                }
            } else {
                result += (a & 1) + (b & 1);
            }

            a >>= 1;
            b >>= 1;
            c >>= 1;
        }

        return result;
    }
};



##############-Java Memoization-####################

class Solution {
    public int minFlips(int a, int b, int c) {
        int result = 0;

        while (a != 0 || b != 0 || c != 0) {
            if ((c & 1) == 1) {
                if ((a & 1) == 0 && (b & 1) == 0) {
                    result++;
                }
            } else {
                result += (a & 1) + (b & 1);
            }

            a >>= 1;
            b >>= 1;
            c >>= 1;
        }

        return result;
    }
}


