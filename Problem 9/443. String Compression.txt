Link to Youtube Video :- https://www.youtube.com/watch?v=jWmW_sxN5V4
Link to Leetcode problem :- https://leetcode.com/problems/string-compression/description/?envType=study-plan-v2&envId=leetcode-75


Time Complexity :- O(N)
Space Complexity :- O(1)

##############-PYTHON-####################

class Solution:
    def compress(self, chars: List[str]) -> int:

        arr=chars[0]

        n = len(chars)
        i=1
        cnt=1
        while i<n:
            if i<n and chars[i] == chars[i-1]:
                cnt +=1
                i+=1
            else:
                if cnt != 1:
                    arr +=str(cnt)
                    cnt=1
                arr+=chars[i]
                i+=1
        if cnt!= 1:
             arr+=str(cnt)
        chars.clear()
        chars[:] = list(arr)
        return len(chars)


##############-Cpp-####################

        
class Solution {
public:
    int compress(svector<char>& chars) {
        string arr;
        arr += chars[0];

        int n = chars.size();
        int i = 1, cnt = 1;

        while (i < n) {
	
           if (i < n && chars[i] == chars[i - 1]) {
                cnt++;
                i++;
            } else {
                if (cnt != 1) {
                    arr += std::to_string(cnt);
                    cnt = 1;
                }
                arr += chars[i];
                i++;
            }
        }
        if (cnt != 1) {
            arr += to_string(cnt);
        }

        chars.clear();
        chars.assign(arr.begin(), arr.end());

        return chars.size();
    }
};


##############-Java-####################


class Solution {
    public int compress(char[] chars) {
        StringBuilder arr = new StringBuilder();
        arr.append(chars[0]);

        int n = chars.length;
        int i = 1, cnt = 1;

        while (i < n) {
            if (i < n && chars[i] == chars[i - 1]) {
                cnt++;
                i++;
            } else {
                if (cnt != 1) {
                    arr.append(cnt);
                    cnt = 1;
                }
                arr.append(chars[i]);
                i++;
            }
        }
        if (cnt != 1) {
            arr.append(cnt);
        }

        String compressedString = arr.toString();
        for (i = 0; i < compressedString.length(); i++) {
            chars[i] = compressedString.charAt(i);
        }

        return compressedString.length();
    }
}
